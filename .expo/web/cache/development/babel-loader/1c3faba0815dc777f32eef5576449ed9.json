{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _objectDestructuringEmpty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectDestructuringEmpty\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _dayjs = _interopRequireDefault(require(\"dayjs\"));\n\nvar _reactRedux = require(\"react-redux\");\n\nvar _DailyList = _interopRequireDefault(require(\"./DailyList\"));\n\nvar _DailyView = _interopRequireDefault(require(\"./DailyView\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _UserDailyData = require(\"../../db/home/UserDailyData\");\n\nvar _UserScheduleData = require(\"../../db/home/UserScheduleData\");\n\nvar _userSchedules = require(\"../../modules/userSchedules\");\n\nvar _User = require(\"../../db/home/User\");\n\nvar _MonthChange = _interopRequireDefault(require(\"./MonthChange\"));\n\nvar _Auth = _interopRequireDefault(require(\"../Auth/Auth\"));\n\nvar _jsxFileName = \"C:\\\\Users\\\\rjqnr\\\\src\\\\planact\\\\src\\\\screens\\\\home\\\\Home.tsx\";\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar UNIT_FETCH_ONCE = 7;\nvar FETCH_LIMIT = 35;\n\nvar fillEmptyDay = function fillEmptyDay(dbData) {\n  var from = dbData.start;\n  var to = dbData.end;\n  var idx = 0;\n\n  for (var i = 0; i <= to.diff(from, 'days'); i++) {\n    var date = from.add(i, 'days');\n\n    if (idx >= dbData.data.length || dbData.data[idx].date.format('YYYYMMDD') != date.format('YYYYMMDD')) {\n      dbData.data.splice(idx, 0, {\n        date: date,\n        events: []\n      });\n    }\n\n    idx++;\n  }\n\n  return dbData;\n};\n\nfunction Home(_ref) {\n  (0, _objectDestructuringEmpty2.default)(_ref);\n  var user_id = '111';\n\n  var _useSelector = (0, _reactRedux.useSelector)(function (state) {\n    return state;\n  }),\n      theme = _useSelector.theme,\n      userSchedules = _useSelector.userSchedules;\n\n  var dispatch = (0, _reactRedux.useDispatch)();\n\n  var _useState = (0, _react.useState)(true),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var today = (0, _dayjs.default)();\n\n  var _useState3 = (0, _react.useState)({\n    start: today,\n    end: today,\n    data: []\n  }),\n      _useState4 = (0, _slicedToArray2.default)(_useState3, 2),\n      dailylist = _useState4[0],\n      setDailylist = _useState4[1];\n\n  var _useState5 = (0, _react.useState)(0),\n      _useState6 = (0, _slicedToArray2.default)(_useState5, 2),\n      selected = _useState6[0],\n      setSelected = _useState6[1];\n\n  var start = dailylist.start,\n      end = dailylist.end,\n      data = dailylist.data;\n\n  var _useState7 = (0, _react.useState)(_User.user_dummy),\n      _useState8 = (0, _slicedToArray2.default)(_useState7, 2),\n      user = _useState8[0],\n      setUser = _useState8[1];\n\n  (0, _react.useEffect)(function () {\n    (function _callee() {\n      var schedules, user, newDailyListData;\n      return _regenerator.default.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regenerator.default.awrap((0, _UserScheduleData.getUserSchedule)(user_id));\n\n            case 2:\n              schedules = _context.sent;\n              _context.next = 5;\n              return _regenerator.default.awrap((0, _User.getUser)());\n\n            case 5:\n              user = _context.sent;\n              setUser(user);\n              dispatch({\n                type: _userSchedules.SCHEDULES_FETCH,\n                schedules: schedules\n              });\n              _context.next = 10;\n              return _regenerator.default.awrap((0, _UserDailyData.getDailyList)({\n                user_id: user_id,\n                start: start,\n                end: today.add(UNIT_FETCH_ONCE - 1, 'days')\n              }));\n\n            case 10:\n              newDailyListData = _context.sent;\n              newDailyListData = fillEmptyDay(newDailyListData);\n              setDailylist(newDailyListData);\n              setLoading(false);\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, []);\n\n  var loadAfterData = function loadAfterData() {\n    var newStart, newEnd, newDailyListData;\n    return _regenerator.default.async(function loadAfterData$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            newStart = end.add(1, 'days');\n            newEnd = end.add(UNIT_FETCH_ONCE, 'days');\n            _context2.next = 4;\n            return _regenerator.default.awrap((0, _UserDailyData.getDailyList)({\n              user_id: user_id,\n              start: newStart,\n              end: newEnd\n            }));\n\n          case 4:\n            newDailyListData = _context2.sent;\n            newDailyListData = fillEmptyDay(newDailyListData);\n            setDailylist({\n              start: start,\n              end: newEnd,\n              data: data.concat(newDailyListData.data)\n            });\n\n          case 7:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var loadBeforeData = function loadBeforeData() {\n    var newStart, newEnd, newDailyListData;\n    return _regenerator.default.async(function loadBeforeData$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            newStart = start.subtract(UNIT_FETCH_ONCE, 'days');\n            newEnd = start.subtract(1, 'days');\n            _context3.next = 4;\n            return _regenerator.default.awrap((0, _UserDailyData.getDailyList)({\n              user_id: user_id,\n              start: newStart,\n              end: newEnd\n            }));\n\n          case 4:\n            newDailyListData = _context3.sent;\n            newDailyListData = fillEmptyDay(newDailyListData);\n            setDailylist({\n              start: newStart,\n              end: end,\n              data: newDailyListData.data.concat(data)\n            });\n            setSelected(function (prev) {\n              return prev + UNIT_FETCH_ONCE;\n            });\n\n          case 8:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var loader = function loader(after) {\n    var load;\n    return _regenerator.default.async(function loader$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            if (!(end.diff(start, 'days') > FETCH_LIMIT)) {\n              _context4.next = 3;\n              break;\n            }\n\n            _reactNative.Alert.alert('최대 5주까지 가능합니다.');\n\n            return _context4.abrupt(\"return\");\n\n          case 3:\n            setLoading(true);\n            load = after ? loadAfterData : loadBeforeData;\n            load().then(function () {\n              return setLoading(false);\n            });\n\n          case 6:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return _react.default.createElement(_reactNative.SafeAreaView, {\n    style: styles(theme).container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 5\n    }\n  }, _react.default.createElement(_MonthChange.default, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }\n  }), _react.default.createElement(_reactNative.View, {\n    style: {\n      minHeight: 140\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }\n  }, _react.default.createElement(_DailyList.default, (0, _extends2.default)({\n    loading: loading,\n    loader: loader,\n    selector: setSelected,\n    selected: selected\n  }, dailylist, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }\n  }))), _react.default.createElement(_reactNative.View, {\n    style: {\n      flex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }\n  }, !loading && _react.default.createElement(_DailyView.default, (0, _extends2.default)({}, dailylist.data[selected], {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 22\n    }\n  }))), _react.default.createElement(_Auth.default, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }\n  }));\n}\n\nvar styles = function styles(theme) {\n  return _reactNative.StyleSheet.create({\n    container: {\n      flex: 1,\n      alignItems: 'stretch',\n      backgroundColor: theme.mainBackground\n    }\n  });\n};\n\nvar _default = Home;\nexports.default = _default;","map":{"version":3,"sources":["C:/Users/rjqnr/src/planact/src/screens/home/Home.tsx"],"names":["UNIT_FETCH_ONCE","FETCH_LIMIT","fillEmptyDay","dbData","from","start","to","end","idx","i","diff","date","add","data","length","format","splice","events","Home","user_id","state","theme","userSchedules","dispatch","loading","setLoading","today","dailylist","setDailylist","selected","setSelected","user_dummy","user","setUser","schedules","type","SCHEDULES_FETCH","newDailyListData","loadAfterData","newStart","newEnd","concat","loadBeforeData","subtract","prev","loader","after","Alert","alert","load","then","styles","container","minHeight","flex","StyleSheet","create","alignItems","backgroundColor","mainBackground"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport dayjs from 'dayjs'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport DailyList from './DailyList'\r\nimport DailyView from './DailyView'\r\nimport { DefaultTheme } from '@/style/styled'\r\nimport { IDailyList, IUser } from '@/utils/data'\r\nimport { SafeAreaView, View, StyleSheet, TouchableOpacity } from 'react-native'\r\nimport { getDailyList } from '@/db/home/UserDailyData'\r\nimport { Alert } from 'react-native'\r\nimport { GlobalState } from '@modules/index'\r\nimport { getUserSchedule } from '@/db/home/UserScheduleData'\r\nimport { SCHEDULES_FETCH } from '@/modules/userSchedules'\r\nimport UserStatus from './UserStatus'\r\nimport { getUser, user_dummy } from '@/db/home/User'\r\nimport MonthChange from './MonthChange'\r\nimport axios from 'axios'\r\nimport { Text } from 'react-native'\r\nimport Auth from '../Auth/Auth'\r\n\r\n// 1회당 가져올 날짜 수\r\nconst UNIT_FETCH_ONCE = 7\r\n// 최대 가져올 날짜 수\r\nconst FETCH_LIMIT = 35\r\n// DB에서 가져온 EVENT 데이터 + 비어있는 날짜 채우기\r\nconst fillEmptyDay = (dbData: IDailyList): IDailyList => {\r\n  const from = dbData.start\r\n  const to = dbData.end\r\n\r\n  let idx = 0\r\n  for (let i = 0; i <= to.diff(from, 'days'); i++) {\r\n    const date = from.add(i, 'days')\r\n    if (\r\n      idx >= dbData.data.length ||\r\n      dbData.data[idx].date.format('YYYYMMDD') != date.format('YYYYMMDD')\r\n    ) {\r\n      dbData.data.splice(idx, 0, {\r\n        date,\r\n        events: [],\r\n      })\r\n    }\r\n    idx++\r\n  }\r\n  return dbData\r\n}\r\n\r\nexport interface HomeProps {}\r\n\r\nfunction Home({}: HomeProps) {\r\n  const user_id = '111'\r\n  const { theme, userSchedules } = useSelector((state: GlobalState) => state)\r\n  const dispatch = useDispatch()\r\n  const [loading, setLoading] = useState<Boolean>(true)\r\n\r\n  const today = dayjs()\r\n  const [dailylist, setDailylist] = useState<IDailyList>({\r\n    start: today,\r\n    end: today,\r\n    data: [],\r\n  })\r\n  const [selected, setSelected] = useState<number>(0)\r\n  const { start, end, data } = dailylist\r\n  const [user, setUser] = useState<IUser>(user_dummy)\r\n\r\n  //prettier-ignore\r\n  useEffect(() => {\r\n    ((async () => {\r\n      // Fetch Schedules\r\n      const schedules = await getUserSchedule(user_id)\r\n      const user = await getUser()\r\n      setUser(user)\r\n      dispatch({ type: SCHEDULES_FETCH, schedules })\r\n\r\n      // Fetch Events\r\n      let newDailyListData: IDailyList = await getDailyList({\r\n        user_id,\r\n        start,\r\n        end: today.add(UNIT_FETCH_ONCE - 1, 'days'),\r\n      })\r\n      newDailyListData = fillEmptyDay(newDailyListData)\r\n      setDailylist(newDailyListData)\r\n      setLoading(false)\r\n    }))()\r\n  }, [])\r\n  // 7일치 데이터\r\n  const loadAfterData = async () => {\r\n    const newStart = end.add(1, 'days')\r\n    const newEnd = end.add(UNIT_FETCH_ONCE, 'days')\r\n    let newDailyListData: IDailyList = await getDailyList({\r\n      user_id,\r\n      start: newStart,\r\n      end: newEnd,\r\n    })\r\n    newDailyListData = fillEmptyDay(newDailyListData)\r\n    setDailylist({\r\n      start,\r\n      end: newEnd,\r\n      data: data.concat(newDailyListData.data),\r\n    })\r\n  }\r\n  const loadBeforeData = async () => {\r\n    const newStart = start.subtract(UNIT_FETCH_ONCE, 'days')\r\n    const newEnd = start.subtract(1, 'days')\r\n    let newDailyListData: IDailyList = await getDailyList({\r\n      user_id,\r\n      start: newStart,\r\n      end: newEnd,\r\n    })\r\n    newDailyListData = fillEmptyDay(newDailyListData)\r\n    setDailylist({\r\n      start: newStart,\r\n      end,\r\n      data: newDailyListData.data.concat(data),\r\n    })\r\n    setSelected((prev) => prev + UNIT_FETCH_ONCE)\r\n  }\r\n\r\n  const loader = async (after: boolean) => {\r\n    if (end.diff(start, 'days') > FETCH_LIMIT) {\r\n      Alert.alert('최대 5주까지 가능합니다.')\r\n      return\r\n    }\r\n    setLoading(true)\r\n    const load = after ? loadAfterData : loadBeforeData\r\n    load().then(() => setLoading(false))\r\n  }\r\n\r\n  return (\r\n    <SafeAreaView style={styles(theme).container}>\r\n      {/* <UserStatus user={user}></UserStatus> */}\r\n      <MonthChange></MonthChange>\r\n      <View style={{ minHeight: 140 }}>\r\n        <DailyList\r\n          loading={loading}\r\n          loader={loader}\r\n          selector={setSelected}\r\n          selected={selected}\r\n          {...dailylist}\r\n        />\r\n      </View>\r\n      <View style={{ flex: 1 }}>\r\n        {!loading && <DailyView {...dailylist.data[selected]} />}\r\n      </View>\r\n      <Auth></Auth>\r\n    </SafeAreaView>\r\n  )\r\n}\r\n\r\nconst styles = (theme: DefaultTheme) =>\r\n  StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n      alignItems: 'stretch',\r\n      backgroundColor: theme.mainBackground,\r\n    },\r\n  })\r\n\r\nexport default Home\r\n"]},"metadata":{},"sourceType":"script"}