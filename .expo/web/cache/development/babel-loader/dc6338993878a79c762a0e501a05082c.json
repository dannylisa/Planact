{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getScheduleById = exports.default = void 0;\n\nvar _reactRedux = require(\"react-redux\");\n\nvar _redux = require(\"redux\");\n\nvar _theme = _interopRequireDefault(require(\"./theme\"));\n\nvar _userAuth = _interopRequireDefault(require(\"./userAuth\"));\n\nvar _userSchedules = _interopRequireDefault(require(\"./userSchedules\"));\n\nvar rootReducer = (0, _redux.combineReducers)({\n  theme: _theme.default,\n  userSchedules: _userSchedules.default,\n  userAuth: _userAuth.default\n});\n\nvar _default = (0, _redux.createStore)(rootReducer);\n\nexports.default = _default;\n\nvar getScheduleById = function getScheduleById(schedule_id) {\n  var schedules = (0, _reactRedux.useSelector)(function (_ref) {\n    var userSchedules = _ref.userSchedules;\n    return userSchedules;\n  });\n  return schedules.find(function (schedule) {\n    return schedule.schedule_id == schedule_id;\n  });\n};\n\nexports.getScheduleById = getScheduleById;","map":{"version":3,"sources":["C:/Users/rjqnr/src/planact/src/modules/index.ts"],"names":["rootReducer","theme","userSchedules","userAuth","getScheduleById","schedule_id","schedules","find","schedule"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AAGA,IAAMA,WAAW,GAAG,4BAAgB;AAClCC,EAAAA,KAAK,EAALA,cADkC;AAElCC,EAAAA,aAAa,EAAbA,sBAFkC;AAGlCC,EAAAA,QAAQ,EAARA;AAHkC,CAAhB,CAApB;;eAMe,wBAAYH,WAAZ,C;;;;AAER,IAAMI,eAAe,GAAG,SAAlBA,eAAkB,CAACC,WAAD,EAAyB;AACtD,MAAMC,SAAS,GAAG,6BAChB;AAAA,QAAGJ,aAAH,QAAGA,aAAH;AAAA,WAAoCA,aAApC;AAAA,GADgB,CAAlB;AAGA,SAAOI,SAAS,CAACC,IAAV,CAAe,UAACC,QAAD;AAAA,WAAcA,QAAQ,CAACH,WAAT,IAAwBA,WAAtC;AAAA,GAAf,CAAP;AACD,CALM","sourcesContent":["import { useSelector } from 'react-redux'\r\nimport { combineReducers, createStore } from 'redux'\r\nimport theme from './theme'\r\nimport userAuth from './userAuth'\r\nimport userSchedules from './userSchedules'\r\n\r\n// 전체 Global State\r\nconst rootReducer = combineReducers({\r\n  theme,\r\n  userSchedules,\r\n  userAuth,\r\n})\r\nexport type GlobalState = ReturnType<typeof rootReducer>\r\nexport default createStore(rootReducer)\r\n\r\nexport const getScheduleById = (schedule_id: string) => {\r\n  const schedules = useSelector(\r\n    ({ userSchedules }: GlobalState) => userSchedules\r\n  )\r\n  return schedules.find((schedule) => schedule.schedule_id == schedule_id)\r\n}\r\n"]},"metadata":{},"sourceType":"script"}