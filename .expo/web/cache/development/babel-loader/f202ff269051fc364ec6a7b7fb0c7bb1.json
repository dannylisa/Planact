{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _objectDestructuringEmpty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectDestructuringEmpty\"));\n\nvar _TouchableView = require(\"../../components/TouchableView\");\n\nvar _userAuth = require(\"../../modules/userAuth\");\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _reactRedux = require(\"react-redux\");\n\nvar _jsxFileName = \"C:\\\\Users\\\\rjqnr\\\\src\\\\planact\\\\src\\\\screens\\\\Auth\\\\Auth.tsx\";\n\nfunction Auth(_ref) {\n  (0, _objectDestructuringEmpty2.default)(_ref);\n\n  var _useSelector = (0, _reactRedux.useSelector)(function (state) {\n    return state;\n  }),\n      theme = _useSelector.theme;\n\n  var _styles = styles(theme),\n      container = _styles.container;\n\n  var _useSelector2 = (0, _reactRedux.useSelector)(function (state) {\n    return state.userAuth;\n  }),\n      token = _useSelector2.token,\n      loading = _useSelector2.loading,\n      error = _useSelector2.error;\n\n  var dispatch = (0, _reactRedux.useDispatch)();\n  var username = 'planact';\n  var password = 'planact123!';\n  return _react.default.createElement(_reactNative.View, {\n    style: container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, _react.default.createElement(_TouchableView.TouchableView, {\n    onPress: function onPress() {\n      dispatch((0, _userAuth.login)({\n        username: username,\n        password: password\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, _react.default.createElement(_reactNative.Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, \"login\")));\n}\n\nvar styles = function styles(theme) {\n  var content = theme.content,\n      text = theme.text;\n  return _reactNative.StyleSheet.create({\n    container: {}\n  });\n};\n\nvar _default = Auth;\nexports.default = _default;","map":{"version":3,"sources":["C:/Users/rjqnr/src/planact/src/screens/Auth/Auth.tsx"],"names":["Auth","state","theme","styles","container","userAuth","token","loading","error","dispatch","username","password","content","text","StyleSheet","create"],"mappings":";;;;;;;;;AAAA;;AAEA;;AAEA;;AACA;;AACA;;;;AAIA,SAASA,IAAT,OAA6B;AAAA;;AAC3B,qBAAkB,6BAAY,UAACC,KAAD;AAAA,WAAwBA,KAAxB;AAAA,GAAZ,CAAlB;AAAA,MAAQC,KAAR,gBAAQA,KAAR;;AACA,gBAAsBC,MAAM,CAACD,KAAD,CAA5B;AAAA,MAAQE,SAAR,WAAQA,SAAR;;AACA,sBAAkC,6BAChC,UAACH,KAAD;AAAA,WAAwBA,KAAK,CAACI,QAA9B;AAAA,GADgC,CAAlC;AAAA,MAAQC,KAAR,iBAAQA,KAAR;AAAA,MAAeC,OAAf,iBAAeA,OAAf;AAAA,MAAwBC,KAAxB,iBAAwBA,KAAxB;;AAGA,MAAMC,QAAQ,GAAG,8BAAjB;AACA,MAAMC,QAAQ,GAAG,SAAjB;AACA,MAAMC,QAAQ,GAAG,aAAjB;AACA,SACE,6BAAC,iBAAD;AAAM,IAAA,KAAK,EAAEP,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,6BAAC,4BAAD;AACE,IAAA,OAAO,EAAE,mBAAM;AACbK,MAAAA,QAAQ,CAAC,qBAAM;AAAEC,QAAAA,QAAQ,EAARA,QAAF;AAAYC,QAAAA,QAAQ,EAARA;AAAZ,OAAN,CAAD,CAAR;AACD,KAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE,6BAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aALF,CADF,CADF;AAWD;;AAED,IAAMR,MAAM,GAAG,SAATA,MAAS,CAACD,KAAD,EAAyB;AACtC,MAAQU,OAAR,GAA0BV,KAA1B,CAAQU,OAAR;AAAA,MAAiBC,IAAjB,GAA0BX,KAA1B,CAAiBW,IAAjB;AACA,SAAOC,wBAAWC,MAAX,CAAkB;AACvBX,IAAAA,SAAS,EAAE;AADY,GAAlB,CAAP;AAGD,CALD;;eAOeJ,I","sourcesContent":["import { TouchableView } from '@/components/TouchableView'\r\nimport { GlobalState } from '@/modules'\r\nimport { login } from '@/modules/userAuth'\r\nimport { DefaultTheme } from '@/style/styled'\r\nimport React from 'react'\r\nimport { StyleSheet, Text, View } from 'react-native'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\ninterface AuthProps {}\r\n\r\nfunction Auth({}: AuthProps) {\r\n  const { theme } = useSelector((state: GlobalState) => state)\r\n  const { container } = styles(theme)\r\n  const { token, loading, error } = useSelector(\r\n    (state: GlobalState) => state.userAuth\r\n  )\r\n  const dispatch = useDispatch()\r\n  const username = 'planact'\r\n  const password = 'planact123!'\r\n  return (\r\n    <View style={container}>\r\n      <TouchableView\r\n        onPress={() => {\r\n          dispatch(login({ username, password }))\r\n        }}\r\n      >\r\n        <Text>login</Text>\r\n      </TouchableView>\r\n    </View>\r\n  )\r\n}\r\n\r\nconst styles = (theme: DefaultTheme) => {\r\n  const { content, text } = theme\r\n  return StyleSheet.create({\r\n    container: {},\r\n  })\r\n}\r\n\r\nexport default Auth\r\n"]},"metadata":{},"sourceType":"script"}